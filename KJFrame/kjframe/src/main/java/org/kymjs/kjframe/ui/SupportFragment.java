package org.kymjs.kjframe.ui;import android.os.Bundle;import android.os.Handler;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import java.lang.ref.SoftReference;/** * 兼容v4包的Fragment */public abstract class SupportFragment extends Fragment implements        OnClickListener {    public static final int WHICH_MSG = 0X37211;    protected View fragmentRootView;    private ThreadDataCallBack callback;    private KJFragmentHandle threadHandle = new KJFragmentHandle(this);    /**     * 一个私有回调类，线程中初始化数据完成后的回调     */    private interface ThreadDataCallBack {        void onSuccess();    }    private static class KJFragmentHandle extends Handler {        private final SoftReference<SupportFragment> mOuterInstance;        KJFragmentHandle(SupportFragment outer) {            mOuterInstance = new SoftReference<>(outer);        }        // 当线程中初始化的数据初始化完成后，调用回调方法        @Override        public void handleMessage(android.os.Message msg) {            if (msg.what == WHICH_MSG && mOuterInstance.get() != null) {                mOuterInstance.get().callback.onSuccess();            }        }    }    protected abstract View inflaterView(LayoutInflater inflater,                                         ViewGroup container, Bundle bundle);    /**     * initialization widget, you should look like parentView.findviewbyid(id);     * call method     *     * @param parentView     */    protected void initWidget(View parentView) {    }    /**     * initialization data     */    protected void initData() {    }    /**     * initialization data. And this method run in background thread, so you     * shouldn't change ui<br>     * on initializated, will call threadDataInited();     */    protected void initDataFromThread() {        callback = new ThreadDataCallBack() {            @Override            public void onSuccess() {                threadDataInited();            }        };    }    /**     * 如果调用了initDataFromThread()，则当数据初始化完成后将回调该方法。     */    protected void threadDataInited() {    }    /**     * 当通过changeFragment()显示时会被调用(类似于onResume)     */    public void onChange() {    }    /**     * widget click method     */    protected void widgetClick(View v) {    }    @Override    public void onClick(View v) {        widgetClick(v);    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        fragmentRootView = inflaterView(inflater, container, savedInstanceState);        AnnotateUtil.initBindView(this, fragmentRootView);        initData();        initWidget(fragmentRootView);        new Thread(new Runnable() {            @Override            public void run() {                initDataFromThread();                threadHandle.sendEmptyMessage(WHICH_MSG);            }        }).start();        return fragmentRootView;    }    protected <T extends View> T bindView(int id) {        return (T) fragmentRootView.findViewById(id);    }    protected <T extends View> T bindView(int id, boolean click) {        T view = (T) fragmentRootView.findViewById(id);        if (click) {            view.setOnClickListener(this);        }        return view;    }}